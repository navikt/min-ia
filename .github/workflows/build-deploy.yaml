name: Build and deploy min-ia
run-name: Build and deploy app | ${{ github.event.head_commit.message }}
on: [ push ]
env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}

concurrency:
  group: build-deploy-on-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build, lint, test and push docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          registry-url: https://npm.pkg.github.com/
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: |
            client/yarn.lock

      - name: Install client dependencies
        working-directory: client
        run: yarn install --immutable
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Run tests
        working-directory: client
        run: yarn test

      - name: Lint client
        working-directory: client
        run: yarn lint

      - name: Build client
        working-directory: client
        run: yarn build

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push the Docker image
        run: |
          docker build . -t ${IMAGE} && docker push ${IMAGE}

  deployAppToDev:
    name: Deploy app to dev
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/next-routes'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to DEV
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev.yaml

  deployAppToEksternDev:
    name: Deploy app to ekstern dev
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/fix_build'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to DEV
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/ekstern-dev.yaml

  deployAppToProd:
    name: Deploy app to production
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to prod
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/prod.yaml
